#!/usr/bin/env bash
# Copyright (C) 2019-2020 LinkedData.Center - All Rights Reserved
# Permission to copy and modify is granted under the MIT license


function USAGE {
	>&2 cat <<-EOT
		Smart Data as a Service (SDaaS) knowledge graph engine
		Copyright (C) 2018-2020 http://linkeddata.center/
			
		startup options:
		
		-d, --background
			execute the platform as a daemon
		
		--readonly
		   disallow mutations in graph database
		   
		--size micro|small|medium|large|xlarge|xxlarge|custom
	EOT
	exit 1
}


### Parse command line options
FOREGROUND=1
READONLY=0
SIZE=micro
while [ "$#" -gt 0 ]; do
	case "$1" in
	    -d|--background)
	    	FOREGROUND=0
            shift
	    	;;
		--readonly)
	    	READONLY=1
            shift
	    	;;
	    --size)
			SIZE="${2-micro}"
	    	shift 2
	    	;;
        --)
            shift
            break
        	;;
	    *)
	        USAGE
	    	;;
	esac
done

case "${SIZE:=micro}" in
    micro)
    	SIZE_OPTS="-server -Xmx256m -Djava.awt.headless=true"
    	;;
    small)
    	SIZE_OPTS="-server -Xmx1500m -Djava.awt.headless=true"
    	;;
    medium)
    	SIZE_OPTS="-server -Xmx3500m -Djava.awt.headless=true -XX:+UseG1GC"
    	;;
	large)
    	SIZE_OPTS="-server -Xmx7g -Djava.awt.headless=true -XX:MaxDirectMemorySize=3000m  -XX:+UseG1GC"
    	;;
	xlarge)
    	SIZE_OPTS="-server -Xmx15g -Djava.awt.headless=true -XX:MaxDirectMemorySize=3000m -XX:+UseG1GC"
    	;;
	xxlarge)
    	SIZE_OPTS="-server -Xmx30g -Djava.awt.headless=true -XX:MaxDirectMemorySize=3000m -XX:+UseG1GC"
    	;;
esac

JAVA_OPTS="${JAVA_OPTS:-"$SIZE_OPTS"}"

startupMsg="SDaaS knowledge graph engine starting using $SIZE memory footprint"

if [  $READONLY -eq 1 ]; then 
	cat ${JETTY_BASE}/readonly-template.xml | sed  "s|__READONLY__|true|" > ${JETTY_BASE}/readonly.xml 
	startupMsg="READONLY - $startupMsg"
else
	cat ${JETTY_BASE}/readonly-template.xml | sed  "s|__READONLY__|false|" > ${JETTY_BASE}/readonly.xml
fi


STARTUP_CMD="java -jar /usr/local/jetty/start.jar STOP.PORT=28282 STOP.KEY=secret"
if [ $FOREGROUND -eq 1 ]; then
	echo "${startupMsg}. Press ctrl-c to stop."
	cd ${JETTY_BASE} &&  $STARTUP_CMD
else
	echo "$startupMsg as daemon."
	cd ${JETTY_BASE} &&  $STARTUP_CMD &
fi